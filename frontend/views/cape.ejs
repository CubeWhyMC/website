<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>LunarCN披风站</title>
    <link rel="stylesheet" type="text/css" href="static/style.css">
    <style>
        #searchContainer {
            position: absolute;
            top: 10px;
            right: 10px;
        }
    </style>
    <script src="https://alcdn.msauth.net/msal-browser/2.14.2/js/msal.js"></script>
    <script src="https://recaptcha.net/recaptcha/api.js" async defer></script>
    <link rel="icon" href="/favicon.ico" type="image/x-icon">
</head>
<body>
<div id="searchContainer">
    <div id="searchIcon" onclick="toggleSearch()">
        <img src="static/icon/search.svg" alt="Search Icon" style="height: 30px;width: 30px;">
    </div>
    <div id="searchInput" style="display: none;">
        <form id="searchForm">
            <input type="text" id="searchPlayerName" name="searchPlayerName" placeholder="输入玩家名" required>
            <button type="button" onclick="searchCape()">查询</button>
        </form>
    </div>
</div>

<div id="capeResult">
    <!-- 查询结果将显示在这里 -->
</div>

<script>
    function toggleSearch() {
        const searchIcon = document.getElementById('searchIcon');
        const searchInput = document.getElementById('searchInput');

        if (searchInput.style.display === 'none') {
            searchInput.style.display = 'block';
            searchIcon.style.display = 'none';
        } else {
            searchInput.style.display = 'none';
            searchIcon.style.display = 'block';
        }
    }

    function searchCape() {

        const playerName = document.getElementById('searchPlayerName').value;

        // 发起请求到后端以查询玩家披风
        fetch(`/searchCape/${playerName}`)
            .then(response => {
                if (response.ok) {
                    return response.blob();
                } else {
                    throw new Error('未找到匹配的披风');
                }
            })
            .then(blob => {
                const imageUrl = URL.createObjectURL(blob);
                const capeResult = document.getElementById('capeResult');
                capeResult.innerHTML = `<h2>${playerName}的披风：</h2><img src="${imageUrl}" alt="披风预览" style="width:190px;height:160px;">`;
            })
            .catch(error => {
                const capeResult = document.getElementById('capeResult');
                capeResult.innerHTML = `<h2>披风查询失败：</h2>${error.message}`;
            });
    }
</script>

<div id="loginContainer">
    <a href="https://login.live.com/oauth20_authorize.srf?client_id=dbb5fc17-43ac-4aa6-997e-ca69cde129a4&response_type=code&redirect_uri=https://cape.lunarcn.top/login&scope=XboxLive.signin%20offline_access">使用 Microsoft 登录</a>
</div>

<h1>创建玩家披风</h1>
<form action="/submit" method="post" id="capeForm">
    <label for="playerName">玩家名:</label>
    <input type="text" id="playerName" name="playerName" required><br><br>

    <label for="selectedCape">选择披风:</label>
    <label>上传违规披风会取消上传资格 </label>
    <select id="selectedCape" name="selectedCape" onchange="previewCape()">
        <option value="none">请选择披风</option>
        <!-- 披风选项将在服务器端动态生成 -->
    </select><br><br>

    <img id="capePreview" src="" alt="披风预览" style="height: 250px;width:370px;">

    <br><br>
    <div class="g-recaptcha" data-sitekey="6Lf-lhIoAAAAAGq60M1eF5iMN0XmSQn28VFBzKNq" data-callback="recaptchaCallback"></div>
    <input type="hidden" id="recaptchaResult" name="recaptchaResult" value="">
    <br>
    <input type="submit" value="提交" disabled>
</form>

<script>
    const selectCape = document.getElementById('selectedCape');
    const capePreview = document.getElementById('capePreview');

    // 向服务器请求可用的披风选项
    fetch('/getCapes')
        .then(response => response.json())
        .then(data => {
            data.capes.forEach(cape => {
                const option = document.createElement('option');
                option.value = cape;
                option.textContent = cape;
                selectCape.appendChild(option);
            });
        })
        .catch(error => console.error('获取披风选项时出错：', error));

    function previewCape() {
        const selectedCape = selectCape.value;
        const encodedFileName = encodeURIComponent(selectedCape);

        // 请求接口以获取图片
        if (selectedCape !== "none") {
            fetch(`/preview/${encodedFileName}`)
                .then(response => {
                    if (response.ok) {
                        return response.blob();
                    } else {
                        throw new Error('获取图片失败');
                    }
                })
                .then(blob => {
                    // 将图片 blob 转换成 URL
                    const imageUrl = URL.createObjectURL(blob);
                    capePreview.src = imageUrl;
                    capePreview.style.display = 'block';
                })
                .catch(error => console.error('获取图片时出错：', error));
        } else {
            capePreview.src = '';
            capePreview.style.display = 'none';
        }
    }

    // 表单提交时的事件处理
    const form = document.getElementById('capeForm');
    form.addEventListener('submit', function (event) {
        const selectedCape = selectCape.value;
        const recaptchaResult = document.getElementById('recaptchaResult').value;

        if (selectedCape === "none") {
            alert('请选择一个披风');
            event.preventDefault();
        }

        // 检查是否成功验证 reCAPTCHA
        if (recaptchaResult !== "success") {
            alert('请先完成reCAPTCHA验证');
            event.preventDefault();
        }
    });

    // reCAPTCHA 成功验证后的回调函数
    function recaptchaCallback(token) {
        // 存储验证结果到隐藏字段
        document.getElementById('recaptchaResult').value = "success";
        // 启用提交按钮
        document.querySelector('input[type="submit"]').removeAttribute('disabled');
    }
</script>
</body>
</html>